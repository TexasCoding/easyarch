#! /bin/bash
pacman -Sy dmidecode

# SETUP MIRRORLIST{{{
mirrorlist(){
    local countries_name=("Australia" "Austria" "Belarus" "Belgium" "Brazil" "Bulgaria" "Canada" "Chile" "China" "Colombia" "Czech Republic" "Denmark" "Estonia" "Finland" "France" "Germany" "Greece" "Hungary" "India" "Ireland" "Israel" "Italy" "Japan" "Kazakhstan" "Korea" "Latvia" "Luxembourg" "Macedonia" "Netherlands" "New Caledonia" "New Zealand" "Norway" "Poland" "Portugal" "Romania" "Russian" "Serbia" "Singapore" "Slovakia" "South Africa" "Spain" "Sri Lanka" "Sweden" "Switzerland" "Taiwan" "Turkey" "Ukraine" "United Kingdom" "United States" "Uzbekistan" "Viet Nam")
    country_list(){
        blue_prompt "Select your mirrorlist country"
        select country_name in "${countries_name[@]}"; do
            if contains_element "$country_name" "${countries_name[@]}"; then
                MIRRORLIST_COUNTRY=$country_name
                break
            else
                invalid_option
            fi
        done
    }

    OPTION=n
    while [[ $OPTION != y ]]; do
        country_list
        read_input_text "Confirm mirrorlist country: ${MIRRORLIST_COUNTRY}"
    done
}
#}}}

#INSTALL MIRRORLIST LIVE{{{
install_mirrorlist_live(){
    blue_prompt "Setting up mirrorlist on live cd"
    pacman -S reflector --noconfirm
    reflector --verbose --country "${MIRRORLIST_COUNTRY}" -l 200 -p http --sort rate --save /etc/pacman.d/mirrorlist
    yellow_prompt "Mirrorlist is set on live cd"
}
#}}}

mirrorlist
install_mirrorlist_live

# COLORS {{{
    Bold=$(tput bold)
    Underline=$(tput sgr 0 1)
    Reset=$(tput sgr0)
    # Regular Colors
    Red=$(tput setaf 1)
    Green=$(tput setaf 2)
    Yellow=$(tput setaf 3)
    Blue=$(tput setaf 4)
    Purple=$(tput setaf 5)
    Cyan=$(tput setaf 6)
    White=$(tput setaf 7)
    # Bold
    BRed=${Bold}$(tput setaf 1)
    BGreen=${Bold}$(tput setaf 2)
    BYellow=${Bold}$(tput setaf 3)
    BBlue=${Bold}$(tput setaf 4)
    BPurple=${Bold}$(tput setaf 5)
    BCyan=${Bold}$(tput setaf 6)
    BWhite=${Bold}$(tput setaf 7)
  #}}}

VERSION="0.0.1"

ARCHI=`uname -m`     		# Display whether 32 or 64 bit system
SYSTEM="Unknown"     	# Display whether system is BIOS or UEFI. Default is "unknown"
LOCALE="en_US.UTF-8"  	# System locale. Default is "en_US.UTF-8"

echo "${BCyan}Enter your full name:${Reset}"
read FULL_NAME

echo "${BCyan}Enter your email for GIT:${Reset}"
read EMAIL

echo "${BCyan}Enter your hostname:${Reset}"
read HOSTNAME

echo "${BCyan}Enter your username:${Reset}"
read USER_NAME

echo "${BCyan}Enter your password:${Reset}"
read PASSWORD

if [[ -f `pwd`/functions ]]; then
  source functions
else
  echo "missing file: functions"
  exit 1
fi

#BASE INSTALL{{{
base_install(){
    mirrorlist
    install_mirrorlist_live
    setup_partitions
    install_base
    generate_fstab
    wireless_software
    set_locale
    set_lang
    set_localtime
    set_hwclock
    set_hostname
    set_root_password
    add_user
    edit_sudoers
    install_mirrorlist_system
    install_grub
}
#}}}

#FRONT INSTALL{{{
front_install(){
    git_install
    dot_files_config
    install_basics
    aur_support
    install_xorg
    install_networkmanager
    video_driver_install
    install_lightdm
    install_audio_drivers
    install_themes_fonts_icons
    install_common_apps
    install_virtualbox
    install_myawesome
    setup_touchpad
    default_directories
    install_flash
    install_tlp
    install_preload
    nvm_install
    install_rbenv_ruby
}
#}}}

echo "${BCyan}Do you want to install base setup? Enter 'y' for yes.${Reset}"
read BASE_INSTALL
if [[ $BASE_INSTALL == y ]]; then
    base_install
fi

echo "${BCyan}Do you want to install frontend now? Enter 'y' for yes.${Reset}"
read FRONT_INSTALL
if [[ $FRONT_INSTALL == y ]]; then
    front_install
fi

echo "${BCyan}Will you be mounting a SHARED PARTION?\nEnter 'y' to mount SHARED NTFS partition:${Reset}"
read MOUNT_SHARED
if [[ $MOUNT_SHARED == y ]]; then
    mount_shared
fi

mkinitcpio_run

blue_prompt "Basic install is complete"
yellow_prompt "You must run ./finalize to complete installation"
read -p "${BPurple}Press [Enter] to exit and reboot${Reset}"
exit